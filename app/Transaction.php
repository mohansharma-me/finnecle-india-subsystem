<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class Transaction extends Model
{
    use SoftDeletes;

    protected $fillable = ['declaration_id'];
    protected $dates = ['deleted_at'];

    public function amount() {
        return $this->donations()->sum('amount');
    }

    public function lucky_amount() {
        $value = 0;

        foreach($this->donations as $donation) {
            $arr = $donation->won();
            if($arr[0]) {
                $value += intval($arr[1]);
            }
        }

        return $value;
    }

    public function ngo_print_string() {
        $ret = "";
        foreach($this->donations as $donation) {
            $ret .= $donation->ngo->description.", ";
        }
        if(strlen($ret) > 2 ){
            $ret[strlen($ret)-2]=".";
        }
        return $ret;
    }

    public function declaration() {
        return $this->belongsTo('\App\Declaration');
    }

    public function donations() {
        return $this->hasMany('\App\Donation');
    }

    public function draw() {
        return $this->belongsTo('\App\Draw');
    }

    public function center() {
        return $this->belongsTo('\App\Center');
    }

    public function paid_transaction() {
        return $this->hasOne('\App\PaidTransaction','transaction_id','id');
    }

    public function isPaid() {
        return $this->paid;
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::deleting(function($transaction) {
            $transaction->donations()->delete();
        });
    }
}
